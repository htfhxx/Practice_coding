//Basic
  #include <stdio.h>
  #include <stdlib>
  #include <string.h>
  #include <iostream>
  #include <algorithm>
  #include <math.h>

//STL
  #include <queue>
  #include <stack>
  #include <vector>
  #include <string>
  #include <set>

//字符串操作（string坑太多了，还是老老实实用char吧)。
char a[9],b[9];
strcmp(a,b)==0;  //表示相等  
strlen(a);
memset(a,0,sizeof(a));  //有时候会出错，老老实实遍历一遍比较稳
sizeof(res)/sizeof(res[0])  //固定数组无法计算（sizeof(a)/sizeof(a[0])=9 ），一般不用。

//结构体重载运算符  cmp
struct Student{
    string num;
    int age;
    bool operator <(const Student & s) const{
        return num<s.num;
    }
}l[1005];
bool cmp(Student a,Student b) return a>b;
sort(a,a+n,cmp); //默认从小到大，cmp从大到小

//二分查找
for(int i=0;i<m;i++){
    string find;
    cin>>find; //目标

    int start=0;
    int end=n-1;
    int result=-1; //结果

    while(start<=end){
        int mid=(start+end)/2;
        if(l[mid].num==find){  //找到了保存结果并break
            result=mid;
            break;
        }
        else if(l[mid].num<find) start=mid+1;  //start=mid是行不通的
        else if(l[mid].num>find) end=mid-1;
    }
    if(result==-1)   cout<<"No Answer!"<<endl;
    else cout<<l[result].num<<" "<<l[result].name<<" "<<l[result].sex<<" "<<l[result].age<<endl;
}

//素数与素数筛
int check(int n){
    for(int i=2;i<sqrt(n)+1;i++){
        if(n%i==0)return 0;  //no
    }
    return 1;   //yes
}

const int maxn = 10000;
int mark[maxn];  //标记
for(int i = 0; i <= maxn; i++)
        mark[i] = 0;
for(int i = 2; i <= maxn; i++){
    if(check(i)==0) continue;  //非素数跳过
    for(int j=i*i;j<maxn;j+=i)  //剪枝--注意+=i
        mark[j]=1;
}

//二分幂a^b
int ans=1;
while(b!=0){
    if(b%2==1){
        ans*=a;
        b--;
        ans%=1000;
    }
    b/=2;
    a*=a;
}
cout<<ans<<endl;

//日期类
int days[13][2]={
    0,0,                 //勿漏！！！！！
    31,31,28,29,31,31,
    30,30,31,31,30,30,
    31,31,31,31,30,30,
    31,31,30,30,31,31
};
struct Date{
    int year,month,day;
    void nextDay(){
        day++;
        int yeap=0;
        if(year%400==0 || year%100!=0 &&year%4==0) yeap=1;
        if(days[month][yeap]<day){
            day=1;
            month++;
        }
        if(month>12){
            month=1;
            year++;
        }
    }
};
int buf[5005][13][32];
int main(){
    Date d;
    d.day=1; d.month=1; d.year=1000;
    int cnt=0;
    while(d.year<=5000){
        d.nextDay();
        cnt++;
        buf[d.year][d.month][d.day]=cnt;
    }
    return 0;
}


//Hash的应用
n个整数取前m大

//活用scanf 和 cin -----scanf读取整数不消耗回车，cin>>会消耗掉回车
//gets(char s[999])   getline(cin,string s) 读取整行
double a[10000];
double num;
scanf("%lf",&num);
a[0]=0;
a[1]=num;
int cnt=2;

char c;
while(scanf("%c",&c)!=EOF && c!='\n'){
	scanf("%lf",&num);
	if(c=='+')a[cnt++]=num;
	else if(c=='-')a[cnt++]=-num;
	else if(c=='*')a[cnt-1]*=num;
	else if(c=='/')a[cnt-1]/=num;
}
for(int i=1;i<cnt;i++)a[0]+=a[i];
printf("%.0lf\n",a[0]);


//数制转换
//十进制转换成b进制--
char c1[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
char c2[16]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
int ans[30];
int cnt=0;
while(input>0){
	ans[cnt++]=input%b;
	input/=b;
}
for(int i=cnt-1;i>=0;i--)
	cout<<c1[ans[i]];  //注意输出不要漏掉>10的数
cout<<endl;

//a进制转换成10进制
int l=strlen(str);
long long int result=0;
for(int i=0;i<l;i++){
	int x=0;
	for(int j=0;j<15;j++){
		if(str[i]==c1[j] || str[i]==c2[j]){
			x=j;
			break;
		}
	}
	result*=a;
	result+=x;
}
//不使用遍历的方法
int l=strlen(str);
long long int result=0;
for(int i=0;i<l;i++){
	result*=a;
	if(str[i] >= 'a' && str[i] <= 'z') result+= (str[i]-'a'+10);
	else if(str[i] >= 'A' && str[i] <= 'Z') result+= (str[i]-'A'+10);
	else if(str[i] >= '0' && str[i] <= '9') result+= (str[i]-'0');
}
 


//最大公约数--辗转相除法
int a,b;
while(cin>>a){
	cin>>b;
	while(b!=0){
		int tem=a%b;
		a=b;
		b=tem;
	}
	cout<<a<<endl;
} 


//高精度整数--占坑（还不会）