//Basic
  #include <stdio.h>
  #include <stdlib>
  #include <string.h>
  #include <iostream>
  #include <algorithm>
  #include <math.h>

//STL
  #include <queue>
  #include <stack>
  #include <vector>
  #include <string>
  #include <set>

//结构体重载运算符  cmp
    struct Student{
        string num;
        int age;
        bool operator <(const Student & s){
            return num<s.num;
        }
    }l[1005];
    bool cmp(Student a,Student b) return a>b;
    sort(a,a+n,cmp); //默认从小到大，cmp从大到小

//二分查找
    for(int i=0;i<m;i++){
        string find;
        cin>>find; //目标
        
        int start=0;
        int end=n-1;
        int result=-1; //结果

        while(start<=end){
            int mid=(start+end)/2;
            if(l[mid].num==find){  //找到了保存结果并break
                result=mid;
                break;
            }
            else if(l[mid].num<find) start=mid+1;  //start=mid是行不通的
            else if(l[mid].num>find) end=mid-1;
        }
        if(result==-1)   cout<<"No Answer!"<<endl;
        else cout<<l[result].num<<" "<<l[result].name<<" "<<l[result].sex<<" "<<l[result].age<<endl;
    }

//素数筛
const int maxn = 10000;
int mark[maxn];  //标记
int prime[maxn];  //存储
int primeth=0;
for(int i = 0; i <= maxn; i++)
        mark[i] = 0;
for(int i = 2; i <= maxn; i++){
    if(mark==1) continue;  //跳过
    prime[primeth++]=i;
    for(int j=i*i;j<maxn;j++)  //剪枝
        mark[j]=1;
}











