//Basic
  #include <stdio.h>
  #include <stdlib>
  #include <string.h>
  #include <iostream>
  #include <algorithm>
  #include <math.h>

//STL
  #include <queue>
  #include <stack>
  #include <vector>
  #include <string>
  #include <set>

//结构体重载运算符  cmp
struct Student{
    string num;
    int age;
    bool operator <(const Student & s) const{
        return num<s.num;
    }
}l[1005];
bool cmp(Student a,Student b) return a>b;
sort(a,a+n,cmp); //默认从小到大，cmp从大到小

//二分查找
for(int i=0;i<m;i++){
    string find;
    cin>>find; //目标

    int start=0;
    int end=n-1;
    int result=-1; //结果

    while(start<=end){
        int mid=(start+end)/2;
        if(l[mid].num==find){  //找到了保存结果并break
            result=mid;
            break;
        }
        else if(l[mid].num<find) start=mid+1;  //start=mid是行不通的
        else if(l[mid].num>find) end=mid-1;
    }
    if(result==-1)   cout<<"No Answer!"<<endl;
    else cout<<l[result].num<<" "<<l[result].name<<" "<<l[result].sex<<" "<<l[result].age<<endl;
}

//素数筛
const int maxn = 10000;
int mark[maxn];  //标记
int prime[maxn];  //存储
int primeth=0;
for(int i = 0; i <= maxn; i++)
        mark[i] = 0;
for(int i = 2; i <= maxn; i++){
    if(mark==1) continue;  //跳过
    prime[primeth++]=i;
    for(int j=i*i;j<maxn;j++)  //剪枝
        mark[j]=1;
}

//二分幂a^b
int ans=1;
while(b!=0){
    if(b%2==1){
        ans*=a;
        b--;
        ans%=1000;
    }
    b/=2;
    a*=a;
}
cout<<ans<<endl;

//日期类
int days[13][2]={
    0,0,                 //勿漏！！！！！
    31,31,28,29,31,31,
    30,30,31,31,30,30,
    31,31,31,31,30,30,
    31,31,30,30,31,31
};
struct Date{
    int year,month,day;
    void nextDay(){
        day++;
        int yeap=0;
        if(year%400==0 || year%100!=0 &&year%4==0) yeap=1;
        if(days[month][yeap]<day){
            day=1;
            month++;
        }
        if(month>12){
            month=1;
            year++;
        }
    }
};
int buf[5005][13][32];
int main(){
    Date d;
    d.day=1; d.month=1; d.year=1000;
    int cnt=0;
    while(d.year<=5000){
        d.nextDay();
        cnt++;
        buf[d.year][d.month][d.day]=cnt;
    }
    return 0;
}


//Hash的应用
n个整数取前m大








